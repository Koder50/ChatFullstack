{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BlockedUsersListService = /*#__PURE__*/(() => {\n  class BlockedUsersListService {\n    constructor(http) {\n      this.http = http;\n      this.exists = false;\n    }\n\n    getBlockedUsersLists() {\n      return this.http.get(`${environment.apiURL}/blocked-users-lists`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    getBlockedUsersList(id) {\n      return this.http.get(`${environment.apiURL}/blocked-users-lists/${id}`).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    addBlockedUsersList(blockedUsersList) {\n      return this.http.post(`${environment.apiURL}/blocked-users-lists`, blockedUsersList).pipe(tap(data => data), catchError(err => throwError(() => err)));\n    }\n\n    updateBlockedUsersList(blockedUsersList) {\n      console.log(\"2: \", blockedUsersList.id);\n      return this.http.put(`${environment.apiURL}/blocked-users-lists/` + blockedUsersList.id, blockedUsersList).pipe(catchError(err => throwError(() => err)));\n    }\n\n    deleteBlockedUsersList(id) {\n      return this.http.delete(`${environment.apiURL}/blocked-users-lists/${id}`).pipe(catchError(err => throwError(() => err)));\n    }\n\n  }\n\n  BlockedUsersListService.ɵfac = function BlockedUsersListService_Factory(t) {\n    return new (t || BlockedUsersListService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BlockedUsersListService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlockedUsersListService,\n    factory: BlockedUsersListService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlockedUsersListService;\n})();","map":null,"metadata":{},"sourceType":"module"}