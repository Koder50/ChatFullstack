{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addBlockedUsersListState, modifyBlockedUsersListState, removeAllBlockedUsersListState, removeBlockedUsersListState, setBlockedUsersListList } from './blocked-users-list.actions';\nexport const initialState = {\n  blockedUsersLists: []\n};\nexport const blockedUsersListReducer = createReducer(initialState, on(setBlockedUsersListList, (state, {\n  blockedUsersLists\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    blockedUsersLists\n  });\n}), on(removeBlockedUsersListState, (state, {\n  blockedUsersListId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    blockedUsersLists: state.blockedUsersLists.filter(data => data.id != blockedUsersListId)\n  });\n}), on(addBlockedUsersListState, (state, {\n  blockedUsersList\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    blockedUsersLists: [...state.blockedUsersLists, blockedUsersList]\n  });\n}), on(modifyBlockedUsersListState, (state, {\n  blockedUsersList\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    blockedUsersLists: state.blockedUsersLists.map(data => data.id === blockedUsersList.id ? blockedUsersList : data)\n  });\n}), on(removeAllBlockedUsersListState, state => {\n  return Object.assign(Object.assign({}, state), {\n    blockedUsersLists: []\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}