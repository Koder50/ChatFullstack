{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getUsers() {\n      return this.http.get(`${environment.apiURL}/users`).pipe(tap(data => data),\n      /*map((chatParticipants: ChatParticipant[]) =>{\r\n          return (chatParticipants.filter((chatParticipant: ChatParticipant) =>{\r\n          return this.deleteOldPosts(chatParticipant.createdAt )}))}),*/\n      //tap((data: User[]) => console.log(\"data: \"+data)),\n      catchError(err => throwError(() => err)));\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}